
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADELANTE ATRAS BEGIN COMA COMMENT DECIMALNUMBER DERECHA ELSE END ENDOFLINE ESPERAR EXTENSION FINPROGRAMA FRENAR FUNCION ID IF INICIODEPROGRAMA IZQUIERDA LIBRERIA NUMBER OPERADOR OPERADORPUNTO PARENTESISA PARENTESISC PROCEDIMIENTO TYPE VARIABLE VARTYPESEPARATOR VPIN WHILEprograma : INICIODEPROGRAMA declaraciones FINPROGRAMAdeclaraciones : librerias\n                   | cuerpo librerias : LIBRERIA PARENTESISA ID OPERADORPUNTO EXTENSION PARENTESISC COMA librerias\n                | LIBRERIA PARENTESISA ID OPERADORPUNTO EXTENSION PARENTESISC ENDOFLINE cuerpo cuerpo : VARIABLE PARENTESISA ID  VARTYPESEPARATOR TYPE PARENTESISC ENDOFLINE cuerpo\n            | FUNCION ID PARENTESISA argumentos PARENTESISC VARTYPESEPARATOR TYPE ENDOFLINE cuerpo\n            | empty argumentos : ID VARTYPESEPARATOR TYPE COMA argumentos\n                 | ID VARTYPESEPARATOR TYPEempty :'
    
_lr_action_items = {'INICIODEPROGRAMA':([0,],[2,]),'$end':([1,10,],[0,-1,]),'LIBRERIA':([2,29,],[6,6,]),'VARIABLE':([2,30,31,38,],[7,7,7,7,]),'FUNCION':([2,30,31,38,],[8,8,8,8,]),'FINPROGRAMA':([2,3,4,5,9,30,31,34,35,36,38,39,],[-11,10,-2,-3,-8,-11,-11,-4,-5,-6,-11,-7,]),'PARENTESISA':([6,7,13,],[11,12,16,]),'ID':([8,11,12,16,32,],[13,14,15,19,19,]),'OPERADORPUNTO':([14,],[17,]),'VARTYPESEPARATOR':([15,19,24,],[18,23,28,]),'EXTENSION':([17,],[21,]),'TYPE':([18,23,28,],[22,27,33,]),'PARENTESISC':([20,21,22,27,37,],[24,25,26,-10,-9,]),'COMA':([25,27,],[29,32,]),'ENDOFLINE':([25,26,33,],[30,31,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([2,],[3,]),'librerias':([2,29,],[4,34,]),'cuerpo':([2,30,31,38,],[5,35,36,39,]),'empty':([2,30,31,38,],[9,9,9,9,]),'argumentos':([16,32,],[20,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIODEPROGRAMA declaraciones FINPROGRAMA','programa',3,'p_programa','yacc.py',6),
  ('declaraciones -> librerias','declaraciones',1,'p_declaraciones','yacc.py',9),
  ('declaraciones -> cuerpo','declaraciones',1,'p_declaraciones','yacc.py',10),
  ('librerias -> LIBRERIA PARENTESISA ID OPERADORPUNTO EXTENSION PARENTESISC COMA librerias','librerias',8,'p_librerias','yacc.py',13),
  ('librerias -> LIBRERIA PARENTESISA ID OPERADORPUNTO EXTENSION PARENTESISC ENDOFLINE cuerpo','librerias',8,'p_librerias','yacc.py',14),
  ('cuerpo -> VARIABLE PARENTESISA ID VARTYPESEPARATOR TYPE PARENTESISC ENDOFLINE cuerpo','cuerpo',8,'p_cuerpo','yacc.py',18),
  ('cuerpo -> FUNCION ID PARENTESISA argumentos PARENTESISC VARTYPESEPARATOR TYPE ENDOFLINE cuerpo','cuerpo',9,'p_cuerpo','yacc.py',19),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','yacc.py',20),
  ('argumentos -> ID VARTYPESEPARATOR TYPE COMA argumentos','argumentos',5,'p_argumentos','yacc.py',23),
  ('argumentos -> ID VARTYPESEPARATOR TYPE','argumentos',3,'p_argumentos','yacc.py',24),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',27),
]
